
################################################# Imports ####################################################
from flask import abort, send_from_directory
import pandas as pd
import os
from flask_apscheduler import APScheduler
import atexit
import time


################################################# Download ##################################################


### Set path to  download folder ###
app.config['path_stat_results_folder'] = os.path.join(os.getcwd(), 'dynamic')

#### Inside the functions returning the satistical results ####

  if query.empty == False:
        # Save the query into the dynamic folder
        query.to_csv(path_or_buf=os.path.join(os.getcwd(), 'dynamic', "{}.csv".format(protein_name)))
        # Take the name of the file names in the download folder
        results_stats_filenames = os.listdir(app.config['path_stat_results_folder'])
        # Empty list to append the file names
        results_stats_filenames_list = []
        # For each file name in the download folder append it into the file name list
        for file in results_stats_filenames:
            results_stats_filenames_list.append(file)

        return render_template('protein_view.html', tables=[row.to_html(classes='data')], titles=row.columns.values, results_stats_filenames_list = results_stats_filenames_list)

    else:
        abort(404, "No data found, please try with a different name")
        
        
#### Download ####

@app.route('/get_csv/<filename>', methods=["GET"])
def get_csv(filename):
    """ Download statistics results csv file/s into users computer and  delete them after"""
    # Download and then delete  the  user's chosen saved statistics results if the file is not empty
    try:
        results_stats_filenames = os.stat(os.path.join(os.getcwd(), 'dynamic', "{}".format(filename))).st_size
        if results_stats_filenames > 0:
            return send_from_directory(app.config['path_stat_results_folder'], filename), \
                   os.remove(os.path.join(os.getcwd(), 'dynamic', "{}".format(filename))),
    except:
        abort(404, "Empty file, please select another file")
        
        

#### HTML ####

<div class="files-section">

	{% for file in results_stats_filenames_list %}
  <!-- For each file in file list display a file icon -->
	<i class="fa fa-file-text-o"></i>
   <!-- For each file in file list display its name and allow to download it by a click -->
	<a href="{{url_for('get_csv',filename= file)}}">{{file}}</a>
	{% endfor %}
</div>





